문제6: 은행 계좌 관리 시스템 개발
1. Account 추상 클래스 생성
    1. deposit(double amount)
        • 입금 기능을 수행합니다.
    2. withdraw(double amount)
        • 출금 기능을 수행합니다.
        • 출금 금액이 계좌 잔액보다 클 경우 출금을 수행하지 않습니다.
    3. calculateInterest(): 계좌의 이자를 계산합니다.
        • 이 메소드는 각 계좌 유형에 따라 다른 이자 계산 방식을 구현합니다.
2.	Account 클래스를 상속받는 서브클래스 생성
    1. SavingsAccount
        • 예금 계좌입니다. 연이율을 기반으로 이자를 계산합니다.
          예를 들어, 연이율이 5%이면, 이자 = 잔액 * 0.05입니다.
    2. CheckingAccount:
        • 당좌 계좌입니다. 이 계좌 유형은 일반적으로 이자가 발생하지 않습니다.
    3. FixedDepositAccount
        • 정기 예금 계좌입니다. 정해진 기간 동안 돈을 예치하고, 해당 기간이 끝난 후에 약속된 이율로 이자를 받습니다.
          예를 들어, 1년 기간에 10%의 이자율로 1000원을 예치했다면, 이자 = 1000 * 0.1입니다.
3.	BankSystem 클래스 구현
    •	Account 타입의 리스트를 만들어 다양한 유형의 계좌 인스턴스를 저장합니다.
    •	각 계좌의 입금, 출금, 이자 계산 기능을 테스트합니다. 이를 통해 각 계좌 유형에 맞는 이자 계산 방법이 올바르게 작동하는지 확인합니다.
